import pymysql
from imports.download_controller import Download_Controller
from imports.pretty import *

config = {}
exec(compile(open("imports/keys.py", "rb").read(), "imports/keys.py", 'exec'), config)

class Update_Controller:

    def __init__(self):
        try:
            self.mysqldb = pymysql.connect(host=config['host'],
                                           user=config['user'],
                                           passwd=config["password"],
                                           db='MalwareDB')
            self.connected = True
        except:
            self.connected = False


    def manual_add(self):
        if self.connected:
            # creates mysql cursor
            with self.mysqldb.cursor() as cursor:
                # input information
                id = self.check_for_id() + 1
                filename = input("insert filename: ")
                architecture = input("input architecture: ")
                lang = input("input lang: ")
                platform = input("input platform: ")
                vip = int(input("input vip: "))
                location = input("input location: ")
                uploader = Download_Controller()
                result = uploader.upload_file(location)
                print("successfully uploaded {}".format(location))

                # converts info to mysql command
                if result:
                    sql = "insert into malware VALUES(%d, '%s', '%s', '%s', '%s', %d, '%s')" % \
                          (id, filename, architecture, lang, platform, vip, location)
                    # executes mysql command
                    cursor.execute(sql)
                    self.mysqldb.commit()
                    return
                print("Unsuccessful upload")
                return
        else:
            print(red("[!] not connected to remote host"))
            return

    def check_for_id(self):
        if self.connected:
            max = 0
            with self.mysqldb.cursor() as cursor:
                cursor.execute("SELECT id FROM malware")
                result = cursor.fetchall()
                for element in result:
                    if element[0] > max:
                        max = element[0]
                return max
        else:
            print(red("[!] not connected to remote host"))
            return

    def manual_delete(self, name):
        if self.connected:
            with self.mysqldb.cursor() as cursor:
                deleter = Download_Controller()
                cursor.execute("SELECT location FROM malware WHERE filename = \"{}\"".format(name))
                result = cursor.fetchone()
                location = result[0]
                result = deleter.delete_remote_file(location)
                if result:
                    cursor.execute("select id from malware where filename like \"{}\"".format(name))
                    x = cursor.fetchone()

                    cursor.execute("delete from malware where id like {}".format(x[0]))
                    self.mysqldb.commit()
                    return
                print("unsuccessful removal")
                return
        else:
            print(red("[!] not connected to remote host"))
            return
