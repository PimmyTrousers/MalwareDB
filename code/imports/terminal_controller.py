# import db_handler
from imports.pretty import *
import sys
import re
from beautifultable import BeautifulTable
import urllib.request
from imports.database_controller import Database_Controller
from imports.download_controller import Download_Controller


class Terminal_Controller:
    def __init__(self):

        self.modules = None
        self.currentmodule = None
        self.db = Database_Controller()
        self.downloader = Download_Controller()

        # how to make tables
        self.commands_table = BeautifulTable()
        self.commands_table.column_headers = ["COMMAND", "DESCRIPTION"]
        self.commands_table.append_row(['help', 'Displays this help menu'])
        self.commands_table.append_row(['use', 'selects a malware module'])
        self.commands_table.append_row(['info', 'displays information about a malware sample'])
        self.commands_table.append_row(['download', 'downloads the selected malware sample'])
        self.commands_table.append_row(['exit', 'leaves the malwareDB'])
        self.commands_table.append_row(['search', 'allows the user to search for a sample'])
        self.commands_table.append_row(['attributes', 'shows the attribute categories for malware'])
        self.commands_table.append_row(['list-all', 'lists all malware'])
        self.bare_commands = {('help'),
                              ('use'),
                              ('info'),
                              ('download'),
                              ('exit'),
                              ('search'),
                              ('attributes'),
                              ('list-all')}


        self.searchmeth_table = BeautifulTable()
        self.searchmeth_table.column_headers = ["IDENTIFIER", "DESCRIPTION"]
        self.searchmeth_table.append_row(["arch", "which architecture etc; x86, x64, arm7 so on..."])
        self.searchmeth_table.append_row(["plat","platform: win32, win64, mac, android so on..."])
        self.searchmeth_table.append_row(["lang", "c, cpp, vbs, bin so on..."])
        self.searchmeth_table.append_row(["vip", "1 or 0"])
        self.searchmeth_table.append_row(["UID", "Unique identifier for malware"])
        self.searchmeth_table.append_row(["name", "which malware classification is it..."])

    def MainMenu(self):
        # This will give you the nice prompt you like so much
        while (True):  # Dont hate, affiliate
            try:
                if self.currentmodule is not None:
                    just_print = self.currentmodule
                    cmd = input(bold(green('malwares.co ')) + bold(blue(just_print)) + green('$> ')).strip()
                else:
                    cmd = input(bold(green('malwares.co ')) + green('$> ')).strip()
            except KeyboardInterrupt:
                print(bold(blue("\n\n[*]")) + " Good bye from Pim's" + bold(red(" malwareDB")) + "!")
                exit()

            self.actOnCommand(cmd)

    def actOnCommand(self, cmd):
        try:
            while cmd == "":
                return
            # displays the commands
            if cmd == "help":
                print(self.commands_table)
                return

            if re.match("^use", cmd):
                result = self.db.use(cmd[4:])
                self.currentmodule = result

                return
            # gives you full table of malware
            if cmd == "list-all":
                result = self.db.get_table()
                list_all_table = BeautifulTable()
                list_all_table.column_headers = ['UID', 'NAME', 'ARCH', 'LANG', 'PLATFORM', 'VIP','LOCATION']
                for malware in result:
                    empty_set = []
                    for element in malware:
                        empty_set.append(element)

                    list_all_table.append_row(empty_set)
                print(list_all_table)
                return

            if cmd == "info":
                if self.currentmodule is not None:
                    info_table = BeautifulTable()
                    info_table.column_headers = ['UID', 'NAME', 'ARCH', 'LANG', 'PLATFORM', 'VIP', 'LOCATION']
                    result = self.db.get_row(self.currentmodule)
                    empty_list = []
                    for element in result:
                        empty_list.append(element)
                    info_table.append_row(element)
                    print(info_table)
                    return
                else:
                    print("You need to select a malware")
                    return


            if cmd == "download":
                location = self.db.getLocation(self.currentmodule)
                self.downloader.download_file(location)
                return

            # exits command line
            if cmd == "exit":
                print(bold(blue("\n\n[*]")) + " Good bye from" + bold(red(" malwareDB")) + "!")
                sys.exit()
                return

            # uses search function from database_controller and displays in table using BeautifulTable
            if re.match("search", cmd):
                i = 0
                #
                result = self.db.search_db(cmd[7:])
                list_all_table = BeautifulTable()
                list_all_table.column_headers = ['UID', 'NAME', 'ARCH', 'LANG', 'PLATFORM', 'VIP', 'LOCATION']
                for malware in result:
                    empty_set = []
                    for element in malware:
                        i += 1
                        empty_set.append(element)

                    list_all_table.append_row(empty_set)
                if i is 0:
                    print("no results found")
                else:
                    print(list_all_table)




                return
            #displays the meanings of the columns
            if cmd == "attributes":
                print(self.searchmeth_table)
                return

            else:
                print(red("[!] unknown command: {}".format(cmd)))

                return


        except KeyboardInterrupt:
            print("\n\nI'll just go now...")
        sys.exit()

