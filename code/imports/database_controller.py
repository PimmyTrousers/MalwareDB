import pymysql.cursors

config = {}
exec(compile(open("imports/keys.py", "rb").read(), "imports/keys.py", 'exec'), config)

class Database_Controller:
    #connects to MYSQL db
    def __init__(self):
        self.mysqldb = pymysql.connect(host=config['host'],
                                       user = config['user'],
                                       passwd = config["password"],
                                       db = 'MalwareDB')


    #executes a mysql command
    def execute(self, command):
        with self.mysqldb.cursor() as cursor:
            cursor.execute(command, ('root', 'Cipriani1!'))

    #gets table information
    def get_table(self):
        with self.mysqldb.cursor() as cursor:
            cursor.execute("select * from malware")
            result = cursor.fetchall()
        return result

    #search_malware table for keyword
    def search_db(self , keyword):
        with self.mysqldb.cursor() as cursor:
            cursor.execute("SELECT * FROM malware "
                           "WHERE (id LIKE \"{}\" "
                           "OR filename LIKE \"{}\" "
                           "OR architecture LIKE \"{}\" "
                           "OR lang LIKE \"{}\" "
                           "OR platform LIKE \"{}\" "
                           "OR vip LIKE \"{}\")".format(keyword, keyword, keyword, keyword, keyword, keyword))
            result = cursor.fetchall()
        return result

    def getLocation(self, name):
        with self.mysqldb.cursor() as cursor:
            cursor.execute("SELECT location FROM malware WHERE filename = \"{}\"".format(name))
        result = cursor.fetchone()
        return result[0]

    def use(self, name):
        with self.mysqldb.cursor() as cursor:
            cursor.execute("SELECT filename FROM malware WHERE (filename LIKE \"{}\" OR id LIKE \"{}\")".format(name, name))
            result = cursor.fetchone()
        return result[0]

