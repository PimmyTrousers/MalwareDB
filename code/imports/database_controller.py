import pymysql.cursors
from imports.pretty import *

config = {}
exec(compile(open("imports/keys.py", "rb").read(), "imports/keys.py", 'exec'), config)

class Database_Controller:
    #connects to MYSQL db
    def __init__(self):
        try:
            self.mysqldb = pymysql.connect(host=config['host'],
                                       user = config['user'],
                                       passwd = config["password"],
                                       db = 'MalwareDB')
            self.connected = True
        except:
            self.connected = False




    #gets table information
    def get_table(self):
        if self.connected:
            self.reconnect()
            with self.mysqldb.cursor() as cursor:
                cursor.execute("select * from malware")
                result = cursor.fetchall()
            return result
        else:
            print(red("[!] not connected to remote host"))
            return

    #search_malware table for keyword
    def search_db(self , keyword):
        if self.connected:
            self.reconnect()
            with self.mysqldb.cursor() as cursor:
                cursor.execute("SELECT * FROM malware "
                               "WHERE (id LIKE \"{}\" "
                               "OR filename LIKE \"{}\" "
                               "OR architecture LIKE \"{}\" "
                               "OR lang LIKE \"{}\" "
                               "OR platform LIKE \"{}\" "
                               "OR vip LIKE \"{}\")".format(keyword, keyword, keyword, keyword, keyword, keyword))
                result = cursor.fetchall()
            return result
        else:
            print(red("[!] not connected to remote host"))
            return

    def getLocation(self, name):
        if self.connected:
            self.reconnect()
            with self.mysqldb.cursor() as cursor:
                cursor.execute("SELECT location FROM malware WHERE filename = \"{}\"".format(name))
            result = cursor.fetchone()
            return result[0]
        else:
            print(red("[!] not connected to remote host"))
            return

    def use(self, name):
        if self.connected:
            self.reconnect()
            with self.mysqldb.cursor() as cursor:
                cursor.execute(
                    "SELECT filename FROM malware WHERE (filename LIKE \"{}\" OR id LIKE \"{}\")".format(name, name))
                result = cursor.fetchone()
            return result[0]
        else:
            print(red("[!] not connected to remote host"))
            return

    def get_row(self, name):
        if self.connected:
            self.reconnect()
            with self.mysqldb.cursor() as cursor:
                cursor.execute("SELECT * FROM malware WHERE filename = \"{}\"".format(name))
            result = cursor.fetchall()
            return result
        else:
            print(red("[!] not connected to remote host"))
            return

    # Reconnect is needed so that the table updates to get the new changes
    # there is probably a way around this
    def reconnect(self):
        self.mysqldb.close()
        self.mysqldb = pymysql.connect(host=config['host'],
                                       user=config['user'],
                                       passwd=config["password"],
                                       db='MalwareDB')
